#
# wm independent hotkeys
#

XF86MonBrightness{Up,Down}
    brightnessctl -e4 -n2 set {5%+,5%-}

XF86Audio{Mute,LowerVolume,RaiseVolume,MicMute}
    {wpctl set-mute @DEFAULT_SINK@ toggle, \
    wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-, \
    wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ -l 1, \
    wpctl set-mute @DEFAULT_SOURCE@ toggle}

XF86Audio{Prev,Play,Next}
    playerctl {previous,play-pause,next}

alt + {F1,F2,F3}
    {wpctl set-mute @DEFAULT_SINK@ toggle, \
    wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-, \
    wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ -l 1}

alt + {F6,F7,F8}
    playerctl {previous,play-pause,next}

Print
    dir="$(xdg-user-dir PICTURES)/ss/$(date +%d-%b_%H-%M-%S).png" && \
    maim "$dir" && xclip -sel clip -t image/png < "$dir" && \
    echo -n "file://$dir" | xclip -sel clip -t text/uri-list && \
    notify-send -t 500 "Screenshot Taken ðŸ“Ž"

shift + Print
    dir="$(xdg-user-dir PICTURES)/ss/$(date +%d-%b_%H-%M-%S).png" && \
    maim -s "$dir" || exit 0 && xclip -sel clip -t image/png < "$dir" && \
    echo -n "file://$dir" | xclip -sel clip -t text/uri-list && \
    notify-send -t 500 "Screenshot Taken ðŸ“Ž"

super + b
    {polybar-msg cmd hide; bspc config top_padding 0, polybar-msg cmd show}

super + d
    while bspc node any.hidden.window -g hidden=off; do false; done && while bspc node "any.!hidden.window" -g hidden=on; do :; done

super + {Return, e}
    {kitty, thunar}

super + @space
    command -v dmenu >/dev/null && dmenu_run || rofi -show run

ctrl + Escape
    rofi -show drun -show-icons

ctrl + alt + l
    slock

ctrl + shift + Escape
    ~/.local/bin/dmscripts/pkm

ctrl + alt + Delete
    ~/.local/bin/dmscripts/sysact

alt + Return
    ~/.config/bspwm/scripts/scratchpad

#
# bspwm hotkeys
#

# reload sxhkd
super + Escape
    pkill -USR1 -x sxhkd && notify-send -t 500 "Reloaded sxhkd!"

# quit/restart bspwm
super + alt + {q,r}
    bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t \~{tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,s,p}
    bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# focus the next/previous window in the current desktop
alt + {_,shift + }Tab
    bspc node -f {next,prev}.local.!hidden.window

# focus the last node/desktop
super + {grave,Tab}
    bspc {node,desktop} -f last

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local

# focus and move the node to the previous/next desktop
super + shift + bracket{left,right}
    bspc node -d {prev,next}.local --follow;

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

#
# move/resize
#

# expand/contract a window
super + alt + {h,j,k,l}
    bspc node -z {left -240 0 || bspc node -z right -240 0, \
    bottom 0 180 || bspc node -z top 0 180, \
    top 0 -180 || bspc node -z bottom 0 -180, \
    right 240 0 || bspc node -z left 240 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -240 0,top 0 180,bottom 0 -180,left 240 0}

# move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-240 0,0 180,0 -180,240 0}
