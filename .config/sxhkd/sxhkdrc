#
# wm independent hotkeys
#

# brightness
XF86MonBrightness{Up,Down}
	               xbacklight {-inc 10,-dec 10}
	
# volume
XF86Audio{LowerVolume,RaiseVolume,Mute}
         pamixer {-d 5,-i 5,-t}

XF86AudioMicMute
         pamixer --default-source -t

# music
XF86Audio{Prev,Play,Next}
         playerctl {previous,play-pause,next}

# toggle bar
super + u
        ~/.local/bin/statusbar/toggle-polybar

# hide all windows
super + d
        while bspc node any.hidden.window -g hidden=off; do false; done && while bspc node 'any.!hidden.window' -g hidden=on; do :; done

# switch layout
super + n
        ~/.local/bin/bspwm/layout

# colors
super + alt + o
        ~/.local/bin/pywal

super + alt + p
        ~/.local/bin/wallch

# clipboard
super + alt + t
        ~/.local/bin/dm-script/tclip

super + alt + d
        ~/.local/bin/dm-script/dclip

# volume
alt + {F2,F3,F4}
      pamixer {-d 5,-i 5,-t}

 # system action
super + F4
        ~/.local/bin/dm-script/sys-action

# music
alt + {F6,F7,F8} 
      playerctl {previous,--player=spotify play-pause,next}   

super + F7
        playerctl play-pause
  
# screenshot
Print
    maim | tee $(xdg-user-dir PICTURES)/ss/$(date +%d_%b_%I:%M).png | xclip -sel c -t image/png | notify-send -t 800 "Screenshot Taken ðŸ“Ž"
                 
shift + Print            
        maim -s | tee $(xdg-user-dir PICTURES)/ss/$(date +%d_%b_%I:%M)-Sel.png | xclip -sel c -t image/png | notify-send -t 800 "Selected Screenshot ðŸ“Ž" 

# menu
ctrl + Escape
       rofi -show drun -show-icons

super + @space 
        dmenu_run

# terminal
super + Return
        kitty 

# explore
super + e
        thunar

# screen-lock
ctrl + alt + l
       ~/.local/bin/lockscreen
	     
# killer
ctrl + alt + Delete
       ~/.local/bin/dm-script/kil	     

# scratchpad
alt + Return
      ~/.local/bin/bspwm/scratchpad

#
# bspwm hotkeys
#

# reload sxhkd configuration
super + Escape
       notify-send -t 600 "reload sxhkd!"; pkill -USR1 -x sxhkd
	
# quit/restart bspwm
super + alt + {q,r}
      	bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
        bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
      	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
        bspc node -n newest.!automatic.local
        # bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
      	bspc node -s biggest.window

#
# state/flags
#

# increase/decrease window gap on focused desktop
super + {minus,equal}
        bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-, +} 5))

# set the window state
  super + {p,shift + p}
  bspc node -t {tiled,pseudo_tiled}

# floating/fullscreen
super + {s,f}
        {bspc config pointer_follows_focus true; \
        bspc node -t $(bspc query -N -n -n .tiled >/dev/null && echo floating || echo tiled); \
        bspc node -f; \
        bspc config pointer_follows_focus false,bspc config pointer_follows_focus true; \
        bspc node -t $(bspc query -N -n -n .tiled >/dev/null && echo fullscreen || echo tiled); \
        bspc node -f; \
        bspc config pointer_follows_focus false}


# set the node flags
super + ctrl + {m,x,s,p}
	      bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the next/previous window in the current desktop
alt + {_,shift + }Tab
     	bspc node -f {next,prev}.local.!hidden.window

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	      bspc node -{f,s} {west,south,north,east}

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	      bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	      bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
      	bspc wm -h off; \
	      bspc node {older,newer} -f; \
      	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	      bspc {desktop -f,node -d} '^{1-9,10}'

# move node to the previous/next desktop
super + shift + bracket{left,right}
        bspc node -d {prev,next}.local --follow;
	
# focus the node for the given path jump
# super + {t,b,comma,period}
#        	bspc node -f @{parent,brother,first,second}

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	      bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
       	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	      bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
        bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	      bspc node -z {left -160 0,bottom 0 160,top 0 -160,right 160 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	      bspc node -z {right -160 0,top 0 160,bottom 0 -160,left 160 0}

# move a floating window
super + {Left,Down,Up,Right}
	      bspc node -v {-160 0,0 160,0 -160,160 0}
