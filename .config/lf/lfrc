# Basic vars
set icons true
set ifs "\n"
set previewer "~/.config/lf/preview"
set cleaner "~/.config/lf/clean"
set errorfmt ""
set promptfmt " \033[34;1m%d\033[0m\033[1m%f\033[0m"
set rulerfmt "%i/%t"
set timefmt "Mon _2 Jan 15:04"

cmd open &{{
    case $(file --mime-type -Lb "$f") in
        text/* | application/json | inode/x-empty | application/x-subrip) lf -remote "send $id \$nvim \$fx" ;;
        *) for f in $fx; do xdg-open "$f" >/dev/null 2>&1; done ;;
    esac
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz | *.tbz | *.tar.bz2 | *.tbz2) tar xjvf "$f" ;;
        *.tar.gz | *.tgz) tar xzvf "$f" ;;
        *.txz | *.tar.xz) tar xJvf "$f" ;;
        *.bz2) bunzip2 "$f" ;;
        *.gz) gunzip "$f" ;;
        *.zip) unzip "$f";;
        *.rar) 7z x "$f" ;;
        *.Z) uncompress "$fx" ;;
        *.7z) 7z x "$f" ;;
    esac
}}

cmd bulk-rename ${{
    tmpfile_old="$(mktemp)"
    tmpfile_new="$(mktemp)"

    [ -n "$fs" ] && fs=$(basename -a $fs) || fs=$(ls)

    printf '%s\n' "$fs" > "$tmpfile_old"
    printf '%s\n' "$fs" > "$tmpfile_new"
    $EDITOR "$tmpfile_new"

    [ "$(wc -l < "$tmpfile_old")" -eq "$(wc -l < "$tmpfile_new")" ] || { rm -f "$tmpfile_old" "$tmpfile_new"; exit 1; }
    paste "$tmpfile_old" "$tmpfile_new" | while IFS="$(printf '\t')" read -r src dst
    do
        [ "$src" = "$dst" ] || [ -e "$dst" ] || mv -- "$src" "$dst"
    done

    rm -f "$tmpfile_old" "$tmpfile_new"
    lf -remote "send $id unselect"
}}

cmd trash ${{
    mkdir -p ~/.local/share/Trash/files
    if [ -z "$fs" ]; then
        gio trash "$f" || mv "$f" ~/.local/share/Trash/files
    else
        IFS="$(printf '\n\t')"
        printf '%s\n' "$fs" | while IFS= read -r file; do
            gio trash "$file" || mv "$file" ~/.local/share/Trash/files
        done
    fi
}}

cmd trash-restore ${{
    gio trash --list | column -t -s "$(printf '\t')" | fzf -i -e -m -d / --with-nth 4.. \
        --bind 'home:first,end:last,ctrl-a:select-all,ctrl-d:deselect-all,ctrl-t:toggle-all' \
        --prompt="Trash restore: " | cut -d ' ' -f1 | while read -r line; do gio trash --restore "$line"; done
}}

cmd create %{{
    IFS=" "
    item="$*"
    if [[ "$item" == */ ]]; then
        mkdir -p -- "${item%/}"
        lf -remote "send $id select \"$(printf '%s' "${item%/}" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
    else
        touch -- "$item"
        lf -remote "send $id select \"$(printf '%s' "$item" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
    fi
}}

# Bindings
map a push :create<space>
map d
map dd trash
map dr trash-restore
map zh set hidden!
map E extract
map R bulk-rename
map x cut
map y copy
map p paste
map v invert
map u unselect
map <enter> open
map T $$TERMINAL > /dev/null 2>&1
map gh cd ~
map gc cd ~/.config/
