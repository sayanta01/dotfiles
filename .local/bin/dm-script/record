#!/bin/sh

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 2
	kill -9 "$recpid"
	exit
	}


video() { \
speaker="alsa_output.pci-0000_01_00.1.hdmi-stereo-extra1"
earphn="bluez_output.B4_9A_95_94_9B_CC.1.monitor"

curr_device=$(pactl get-default-sink)

if [ "$curr_device" = "$speaker" ]
then
  ffmpeg -thread_queue_size 4096 \
  -f x11grab \
  -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
  -r 60 -probesize 42M -i :0.0 \
  -f pulse -ac 2 \
  -thread_queue_size 4096 \
  -i alsa_output.pci-0000_01_00.1.hdmi-stereo-extra1 \
  -vcodec libx264 -s "1920x1080" \
  -acodec libmp3lame -ab 128k -ar 44100 \
  "$HOME/vids/$(date '+%I:%M:%S %d-%b').mkv" &
  echo $! > /tmp/recordingpid
else
  ffmpeg -thread_queue_size 4096 \
  -f x11grab \
  -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
  -r 60 -probesize 42M -i :0.0 \
  -f pulse -ac 2 \
  -thread_queue_size 4096 \
  -i $earphn \
  -vcodec libx264 -s "1920x1080" \
  -acodec libmp3lame -ab 128k -ar 44100 \
  "$HOME/vids/$(date '+%I:%M:%S %d-%b').mkv" &
  echo $! > /tmp/recordingpid
fi
}

audio() { \
speaker="alsa_output.pci-0000_01_00.1.hdmi-stereo-extra1"
earphn="bluez_output.B4_9A_95_94_9B_CC.1.monitor"
curr_device=$(pactl get-default-sink)

if [ "$curr_device" = "$speaker" ]
then
  ffmpeg \
  -f pulse -i alsa_input.pci-0000_00_1b.0.analog-stereo -ac 2 \
  "$HOME/music/$(date '+%I:%M:%S %d-%b').mp4" &
  echo $! > /tmp/recordingpid
else
  ffmpeg \
  -f pulse -i $earphn -ac 2 \
  "$HOME/music/$(date '+%I:%M:%S %d-%b').mp4" &
  echo $! > /tmp/recordingpid
fi
}


askrecording() { \
	choice=$(printf "video\\naudio\\nvideo selected" | dmenu -p "Record")
	case "$choice" in
		video) video;;
		audio) audio;;
		*selected) videoselected;;
	esac
	}

asktoend() { \
	response=$(printf "No\\nYes" | dmenu -p "Recording still active. End recording?") &&
	[ "$response" = "Yes" ] &&  killrecording
	}


videoselected()
{
	slop -f "%x %y %w %h" > /tmp/slop
	read -r X Y W H < /tmp/slop
	rm /tmp/slop

  ffmpeg -thread_queue_size 4096 \
	-f x11grab \
	-r 60 -probesize 42M \
  -thread_queue_size 4096 \
	-video_size "$W"x"$H" \
	-i :0.0+"$X,$Y" \
	-c:v libx264 -qp 0 \
	"$HOME/vids/$(date '+%I:%M:%S %d-%b')-box.mkv" &
	echo $! > /tmp/recordingpid
}

  
case "$1" in
	video) video;;
	audio) audio;;
	*selected) videoselected;;
	kill) killrecording;;
	*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac


