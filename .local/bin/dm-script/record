#!/bin/sh

recording_active=0

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	# even after SIGTERM, ffmpeg may still run, so use SIGKILL
	sleep 2
	kill -9 "$recpid"
	recording_active=0
	exit
}

video() {
	# default_sink=$(pactl info | grep 'Default Sink' | cut -d':' -f 2)
	ffmpeg -thread_queue_size 4096 \
		-f x11grab \
		-r 60 -probesize 42M -i :0.0 \
		-f pulse -ac 2 -i default \
		-thread_queue_size 4096 \
		-vcodec libx264 \
		-s "$(xrandr | awk '/\*/ {print $1}')" \
		-acodec libmp3lame -ab 128k -ar 44100 \
		"$(xdg-user-dir VIDEOS)/$(date '+%I:%M_%d_%b').mkv" &
	echo $! >/tmp/recordingpid
	recording_active=1
}

audio() {
	# default_audio_sink=$(pactl list sources | grep "Name" | cut -d':' -f 2)
	ffmpeg \
		-f pulse -ac 2 -i default \
		"$(xdg-user-dir MUSIC)/$(date '+%I:%M_%d_%b').flac" &
	echo $! >/tmp/recordingpid
	recording_active=1
}

askrecording() {
	choice=$(printf "video\\naudio\\nselected_vid" | dmenu -p "Record")
	case "$choice" in
	video) video ;;
	audio) audio ;;
	selected_vid) selected_vid ;;
	esac
}

asktoend() {
	if [ "$recording_active" -eq 1 ]; then
		response="yes"
	else
		response=$(printf "no\\nyes" | dmenu -p "Recording still active, End recording?")
	fi

	if [ "$response" = "yes" ]; then
		killrecording
	fi
}

selected_vid() {
	slop -f "%x %y %w %h" >/tmp/slop
	read -r X Y W H </tmp/slop
	rm /tmp/slop

	ffmpeg -thread_queue_size 4096 \
		-f x11grab \
		-r 60 -probesize 42M \
		-thread_queue_size 4096 \
		-video_size "$W"x"$H" \
		-i :0.0+"$X,$Y" \
		-c:v libx264 -qp 0 \
		"$(xdg-user-dir VIDEOS)/$(date '+%I:%M_%d_%b')-box.mkv" &
	echo $! >/tmp/recordingpid
	recording_active=1
}

case "$1" in
  video) video ;;
  audio) audio ;;
  selected_vid) selected_vid ;;
  kill) killrecording ;;
  *) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording ;;
esac
