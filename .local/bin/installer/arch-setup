#!/bin/sh

for dir in desk dl dox music pix vids pub templates code imp; do
	mkdir ~/"$dir"
done
for dots in .bashrc .profile .vimrc .xprofile .zprofile; do
	cp -r "$HOME/dotfiles/$dots" "$HOME"
done
[ -d ~/.local/bin/ ] || mkdir -p ~/.local/bin/
[ -d ~/pix/ss/ ] || mkdir -p ~/pix/ss/
cp -r ~/dotfiles/.local/bin/* ~/.local/bin && cp -r ~/dotfiles/.local/share/* ~/.local/share && cp -r ~/dotfiles/.config/. ~/.config
chmod -R +x ~/.config/bspwm/ ~/.config/polybar/launch.sh ~/.config/sxhkd/sxhkd.sh ~/.local/bin/ ~/.config/nsxiv/ ~/.config/lf/

# Fonts
printf "Fonts? (y/N): "
read -r choice
if [ "$choice" = "y" ]; then
	wget https://github.com/subframe7536/Maple-font/releases/latest/download/MapleMono-NF.zip
	yes | sudo unzip MapleMono-NF.zip -d /usr/share/fonts/TTF
	wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.zip
	yes | sudo unzip JetBrainsMono.zip -d /usr/share/fonts/TTF
	wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.zip
	yes | sudo unzip FiraCode.zip -d /usr/share/fonts/TTF
	wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/CascadiaCode.zip
	yes | sudo unzip CascadiaCode.zip -d /usr/share/fonts/TTF
	fc-cache -fv
	rm -rf MapleMono-NF.zip JetBrainsMono.zip FiraCode.zip CascadiaCode.zip
else
	:
fi

# Suckless
git clone --depth=1 https://github.com/sayanta01/st.git ~/dl/st
cd ~/dl/st && sudo make clean install
git clone --depth=1 https://github.com/sayanta01/dmenu.git ~/dl/dmenu
cd ~/dl/dmenu && sudo make clean install

# Nvim
git clone --depth=1 https://github.com/sayanta01/nvim ~/.config/nvim
# Tmux
git clone --depth=1 https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm

# Themes
git clone --depth=1 https://github.com/sayanta01/BeautySolar ~/.local/share/icons/BeautySolar
sudo cp -r ~/.local/share/icons/BeautySolar /usr/share/icons
sudo cp -r ~/.local/share/themes/* /usr/share/themes
sudo cp -r ~/.local/share/fonts/* /usr/share/fonts

sudo pacman -S --noconfirm ttf-joypixels ttf-font-awesome \
	noto-fonts noto-fonts-emoji noto-fonts-cjk terminus-font \
	exa bat fd fzf man-db bash-completion starship \
	mate-calc meld firefox qutebrowser \
	linux-lts linux-lts-headers kitty neovim newsboat \
	gnome-keyring cowsay htop stress neofetch \
	bspwm polybar sxhkd rofi dunst \
	qt5ct qt6ct lxappearance xcape pass \
	pavucontrol playerctl pulsemixer mpd ncmpcpp \
	net-tools wireless_tools iftop network-manager-applet \
	mpv mediainfo perl-image-exiftool imagemagick nsxiv maim xwallpaper python-pip python-pywal \
	zip unzip unrar p7zip engrampa \
	lf gvfs gvfs-mtp thunar thunar-archive-plugin thunar-media-tags-plugin \
	zathura zathura-pdf-mupdf ghostscript \
	zsh-syntax-highlighting zsh-completions zsh-autosuggestions \
	rsync wget yt-dlp aria2 jq transmission-cli \
	xsct xdg-utils xdg-user-dirs xdo \
	socat nmap exfat-utils \
	xorg-xinit xclip xdotool \
	wmname wmctrl unclutter
# libx11 libxft libxrandr libxinerama
# xorg-server xorg-xwininfo xorg-xprop xorg-xrdb xorg-xrandr xorg-xsetroot xorg-xbacklight

# Check CPU vendor
cpu_vendor=$(grep vendor_id /proc/cpuinfo | uniq | awk -F ': ' '{print $2}')
if [ "$cpu_vendor" = "GenuineIntel" ]; then
	sudo pacman -S --noconfirm intel-ucode
elif [ "$cpu_vendor" = "AuthenticAMD" ]; then
	sudo pacman -S --noconfirm amd-ucode
else
	echo "Unsupported CPU vendor"
fi

## Audio server
distro=$(lsb_release -a | grep 'Distributor ID' | cut -f 2)
if [ "$distro" = "Artix" ]; then
	sudo pacman -S --noconfirm pipewire pipewire-pulse wireplumber
	# sudo pacman -S --noconfirm pulseaudio pulseaudio-bluetooth

	## Services
	sudo pacman -S --noconfirm openssh-runit docker-runit bluez-runit dbus-runit cronie-runit
	sudo ln -s /etc/runit/sv/sshd /run/runit/service
	sudo ln -s /run/runit/sv/docker /run/runit/service
	# sudo touch /run/runit/service/docker/down
	sudo ln -s /etc/runit/sv/bluetoothd /run/runit/service
	sudo ln -s /etc/runit/sv/dbus /run/runit/service
	# sudo ln -s /etc/runit/sv/cronie /run/runit/service
else
	sudo pacman -S --noconfirm pipewire pipewire-pulse wireplumber
	systemctl --user --now enable pipewire pipewire-pulse wireplumber

	## Services
	sudo pacman -S --noconfirm openssh docker bluez dbus cronie
fi

# Display Manager
# sudo pacman -S --noconfirm lightdm-gtk-greeter-settings grub-customizer
# dm-tool switch-to-greeter

# Check Nvidia GPU
# if lspci | grep -i nvidia; then
# 	sudo pacman -S --noconfirm nvidia-dkms nvidia-utils nvidia-settings opencl-nvidia \
# 		nvtop glmark2
# else
# 	echo "No NVIDIA GPU detected"
# fi
## https://github.com/korvahannu/arch-nvidia-drivers-installation-guide

# GUI apps
sudo pacman -S --noconfirm scrcpy android-tools android-file-transfer \
	obs-studio blender audacity gimp inkscape \
	kdeconnect telegram-desktop \
	blueman bluez-utils \
	ntfs-3g
# virtualbox virtualbox-guest-utils
# sudo usermod -aG vboxusers "$USER"  # USB usage for Virtual-Box

# VM
printf "Want to install QEMU VM ? (y/N): "
read -r choice
if [ "$choice" = "y" ]; then
	sudo pacman -S --noconfirm qemu virt-manager dnsmasq bridge-utils openbsd-netcat libvirt-runit spice-vdagent-runit
	# libvirt spice-vdagent qemu-arch-extra
	sudo ln -s /etc/runit/sv/virtlogd /run/runit/service
	sudo touch /run/runit/service/virtlogd/down
	sudo ln -s /etc/runit/sv/libvirtd /run/runit/service
	sudo touch /run/runit/service/libvirtd/down
	sudo ln -s /etc/runit/sv/spice-vdagentd /run/runit/service
	sudo touch /run/runit/service/spice-vdagentd/down
	# sudo systemctl enable --now libvirtd  # arch
	sudo sed -i '/^#unix_sock_group = "libvirt"/s/^#//' /etc/libvirt/libvirtd.conf
	sudo sed -i '/^#unix_sock_rw_perms = "0770"/s/^#//' /etc/libvirt/libvirtd.conf
	sudo usermod -aG libvirt "$USER"
# sudo systemctl restart libvirtd  # arch
else
	:
fi

# AUR
git clone --depth=1 https://aur.archlinux.org/paru.git ~/.cache/paru
cd ~/.cache/paru && makepkg -fsri --noconfirm
paru -S betterlockscreen colorpicker simple-mtpfs \
	visual-studio-code-bin powershell-bin

# /etc/pacman.conf    #IgnorePkg =

# Teletype font
# sudo setfont /usr/share/kbd/consolefonts/ter-d16b.psf.gz
# sudo su root -c "echo -e FONT='ter-d18b.psf.gz' > /etc/vconsole.conf"

# Fix qt
sudo sh -c 'echo "QT_QPA_PLATFORMTHEME=\"qt5ct\"" > /etc/environment'

# Get percentage of connected device
sudo sed -i 's/# ControllerMode = bredr/ControllerMode = bredr/' /etc/bluetooth/main.conf
sudo sed -i 's/^# \(Experimental = true\)/\1/' /etc/bluetooth/main.conf
