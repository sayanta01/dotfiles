#!/bin/sh

dots=".bashrc .profile .vimrc .xprofile .zprofile"
for file in $dots; do
	cp -r ~/dotfiles/"$file" ~/
done
mkdir "$HOME/.local/bin"
cp -r ~/dotfiles/.local/bin/* ~/.local/bin && cp -r ~/dotfiles/.local/share/* ~/.local/share && cp -r ~/dotfiles/.config/. ~/.config
chmod -R +x ~/.config/bspwm/ ~/.config/polybar/launch.sh ~/.config/sxhkd/sxhkd.sh ~/.local/bin/ ~/.config/sxiv/ ~/.config/lf/
for dir in desk dl dox music pix vids pub templates code imp; do
	mkdir ~/"$dir"
done

printf "Fonts? (y/n): "
read -r choice

if [ "$choice" = "y" ]; then
	# Maple-font
	wget https://github.com/subframe7536/Maple-font/releases/latest/download/MapleMono-NF.zip
	yes | sudo unzip MapleMono-NF.zip -d /usr/share/fonts/TTF
	# Nerd-fonts
	wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.zip
	yes | sudo unzip JetBrainsMono.zip -d /usr/share/fonts/TTF
	wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/Cousine.zip
	yes | sudo unzip Cousine.zip -d /usr/share/fonts/TTF
	wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.zip
	yes | sudo unzip FiraCode.zip -d /usr/share/fonts/TTF
	wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/CascadiaCode.zip
	yes | sudo unzip CascadiaCode.zip -d /usr/share/fonts/TTF
	fc-cache -fv
	rm -rf MapleMono-NF.zip JetBrainsMono.zip Cousine.zip FiraCode.zip CascadiaCode.zip
else
	:
fi

# Suckless
git clone --depth=1 https://github.com/sayanta01/st.git ~/dl/st
cd ~/dl/st && sudo make clean install
git clone --depth=1 https://github.com/sayanta01/dmenu.git ~/dl/dmenu
cd ~/dl/dmenu && sudo make clean install

# My nvim config
git clone --depth=1 https://github.com/sayanta01/nvim ~/.config/nvim
# Tpm
git clone --depth=1 https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm

# Themes
# wget -P ~/dl https://github.com/ful1e5/apple_cursor/releases/latest/download/macOS-BigSur.tar.gz
# cd ~/dl || exit
# tar -xvf macOS-BigSur.tar.gz
# sudo cp -r macOS-BigSur /usr/share/icons
git clone --depth=1 https://github.com/sayanta01/BeautySolar ~/.local/share/icons/BeautySolar
sudo cp -r ~/.local/share/icons/BeautySolar /usr/share/icons
sudo cp -r ~/.local/share/themes/* /usr/share/themes
sudo cp -r ~/.local/share/fonts /usr/share/fonts/local-fonts

sudo pacman -S --noconfirm ttf-joypixels ttf-font-awesome \
	noto-fonts noto-fonts-emoji noto-fonts-cjk terminus-font \
	exa bat fd fzf man-db bash-completion starship \
	mate-calc firefox qutebrowser meld \
	linux-lts linux-lts-headers kitty newsboat trash-cli neovim \
	neofetch stress htop cowsay gnome-keyring \
	bspwm polybar sxhkd rofi dunst \
	qt5ct qt6ct lxappearance xcape \
	playerctl pulsemixer pavucontrol mpd ncmpcpp \
	cmake wmname pass \
	wireless_tools net-tools network-manager-applet dnsutils iftop \
	mpv mediainfo perl-image-exiftool ffmpegthumbnailer imagemagick maim sxiv xwallpaper python-pip python-pywal \
	zip unzip unrar p7zip engrampa \
	lf gvfs gvfs-mtp thunar thunar-archive-plugin thunar-media-tags-plugin \
	zathura zathura-pdf-mupdf ghostscript \
	zsh-syntax-highlighting zsh-completions zsh-autosuggestions \
	rsync wget yt-dlp aria2 transmission-cli jq \
	xdg-utils xdg-user-dirs xdo \
	socat nmap exfat-utils \
	xorg-xinit xclip xdotool wmctrl unclutter
# libx11 libxft libxrandr libxinerama
# xorg-server xorg-xrdb xorg-xwininfo xorg-xprop xorg-xrandr xorg-xsetroot xorg-xbacklight

# Check CPU vendor
cpu_vendor=$(grep vendor_id /proc/cpuinfo | uniq | awk -F ': ' '{print $2}')

if [ "$cpu_vendor" = "GenuineIntel" ]; then
	sudo pacman -S --noconfirm intel-ucode
elif [ "$cpu_vendor" = "AuthenticAMD" ]; then
	sudo pacman -S --noconfirm amd-ucode
else
	echo "Unsupported CPU vendor"
fi

distro=$(lsb_release -a | grep 'Distributor ID' | cut -f 2)
if [ "$distro" = "Artix" ]; then
	## Audio server
	sudo pacman -S --noconfirm pipewire pipewire-pulse wireplumber
	# sudo pacman -S pulseaudio pulseaudio-bluetooth

	## Services
	sudo pacman -S --noconfirm openssh-runit bluez-runit docker-runit dbus-runit cronie-runit
	sudo ln -s /etc/runit/sv/sshd /run/runit/service
	sudo ln -s /etc/runit/sv/bluetoothd /run/runit/service
	sudo ln -s /run/runit/sv/docker /run/runit/service
	# sudo touch /run/runit/service/docker/down
	sudo ln -s /etc/runit/sv/dbus /run/runit/service
	# sudo ln -s /etc/runit/sv/cronie /run/runit/service
else
	## Audio server
	sudo pacman -S --noconfirm pipewire pipewire-pulse wireplumber
	systemctl --user --now enable pipewire pipewire-pulse wireplumber

	## Services
	sudo pacman -S --noconfirm openssh bluez docker dbus cronie
fi

# Display Manager
sudo pacman -S --noconfirm lightdm-gtk-greeter-settings grub-customizer
# lightdm-runit  # artix
# dm-tool switch-to-greeter

# Check Nvidia GPU
if lspci | grep -i nvidia; then
	sudo pacman -S --noconfirm nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings opencl-nvidia \
		nvtop glmark2
else
	echo "No NVIDIA GPU detected"
fi
# https://github.com/korvahannu/arch-nvidia-drivers-installation-guide

# GUI apps
sudo pacman -S --noconfirm scrcpy android-tools android-file-transfer \
	obs-studio blender audacity gimp inkscape \
	kdeconnect telegram-desktop \
	blueman bluez-utils \
	ntfs-3g
# virtualbox virtualbox-guest-utils
# sudo usermod -aG vboxusers "$USER"  # USB usage for Virtual-Box

# VM
sudo pacman -S --noconfirm qemu virt-manager dnsmasq bridge-utils openbsd-netcat libvirt-runit spice-vdagent-runit
# libvirt spice-vdagent qemu-arch-extra
sudo ln -s /etc/runit/sv/virtlogd /run/runit/service
sudo touch /run/runit/service/virtlogd/down
sudo ln -s /etc/runit/sv/libvirtd /run/runit/service
sudo touch /run/runit/service/libvirtd/down
sudo ln -s /etc/runit/sv/spice-vdagentd /run/runit/service
sudo touch /run/runit/service/spice-vdagentd/down
# sudo systemctl enable --now libvirtd  # arch
sudo sed -i '/^#unix_sock_group = "libvirt"/s/^#//' /etc/libvirt/libvirtd.conf
sudo sed -i '/^#unix_sock_rw_perms = "0770"/s/^#//' /etc/libvirt/libvirtd.conf
sudo usermod -aG libvirt "$USER"
# sudo systemctl restart libvirtd  # arch

# AUR
git clone --depth=1 https://aur.archlinux.org/paru.git ~/.cache/paru
cd ~/.cache/paru && makepkg -fsri --noconfirm
paru -S betterlockscreen colorpicker simple-mtpfs \
	visual-studio-code-bin powershell-bin ttyper cava

# /etc/pacman.conf    #IgnorePkg =

distro=$(lsb_release -a | awk -F ':\t' '/Distributor ID/ {print $2}')
if [ "$distro" = "Artix" ] || [ "$distro" = "Arch" ]; then
	sed -i 's/^# source \/usr\/share\/zsh\/plugins\/zsh-syntax-highlighting\/zsh-syntax-highlighting.plugin.zsh/source \/usr\/share\/zsh\/plugins\/zsh-syntax-highlighting\/zsh-syntax-highlighting.plugin.zsh/' ~/.config/zsh/.zshrc
	sed -i 's/^# source \/usr\/share\/zsh\/plugins\/zsh-autosuggestions\/zsh-autosuggestions.plugin.zsh/source \/usr\/share\/zsh\/plugins\/zsh-autosuggestions\/zsh-autosuggestions.plugin.zsh/' ~/.config/zsh/.zshrc
else
	:
fi

# Change Teletype font
# sudo setfont /usr/share/kbd/consolefonts/ter-d16b.psf.gz
# sudo su root -c "echo -e FONT='ter-d18b.psf.gz' > /etc/vconsole.conf"

# Fix qt
sudo sh -c 'echo "QT_QPA_PLATFORMTHEME=\"qt5ct\"" > /etc/environment'

# Get percentage of connected device
sudo sed -i 's/# ControllerMode = bredr/ControllerMode = bredr/' /etc/bluetooth/main.conf
sudo sed -i 's/^# \(Experimental = true\)/\1/' /etc/bluetooth/main.conf

# Fix suckless utilities give XOpenIM failed error
# echo 'LANG=en_US.UTF-8
# LC_CTYPE=en_US.UTF-8
# LC_ADDRESS=en_US.UTF-8
# LC_IDENTIFICATION=en_US.UTF-8
# LC_MEASUREMENT=en_US.UTF-8
# LC_MONETARY=en_US.UTF-8
# LC_NAME=en_US.UTF-8
# LC_NUMERIC=en_US.UTF-8
# LC_PAPER=en_US.UTF-8
# LC_TELEPHONE=en_US.UTF-8
# LC_TIME=en_US.UTF-8' | sudo tee -a /etc/locale.conf
