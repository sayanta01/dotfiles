#!/bin/sh

for dir in desk dl dox music pix vids pub templates; do
	mkdir -p ~/"$dir"
done
for dots in .bashrc .profile .xprofile .zprofile; do
	cp -r "$HOME/dotfiles/$dots" "$HOME"
done
[ -d ~/.local/bin/ ] || mkdir -p ~/.local/bin/
[ -d ~/pix/ss/ ] || mkdir -p ~/pix/ss/
cp -r ~/dotfiles/.local/bin/* ~/.local/bin && cp -r ~/dotfiles/.local/share/* ~/.local/share && cp -r ~/dotfiles/.config/. ~/.config
chmod -R +x ~/.config/bspwm/ ~/.config/polybar/launch.sh ~/.config/sxhkd/sxhkd.sh ~/.local/bin/ ~/.config/nsxiv/

# Fonts
printf "Update/Install Fonts? [y/N]: "
read -r choice
if [ "$choice" = "y" ]; then
	[ -d /usr/share/fonts/nerd-fonts/ ] && sudo rm -r /usr/share/fonts/nerd-fonts
	[ -d /usr/share/fonts/nerd-fonts/ ] || sudo mkdir /usr/share/fonts/nerd-fonts
	curl -OL https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.tar.xz
	sudo tar -xvf JetBrainsMono.tar.xz -C /usr/share/fonts/nerd-fonts
	fc-cache -fv
else
	:
fi

# Suckless
[ -d ./dmenu/ ] || git clone --depth=1 https://github.com/sayanta01/dmenu
if ! command -v dmenu >/dev/null; then
	cd dmenu && sudo make clean install
fi

# Vim
[ -d ~/.config/nvim/ ] || git clone --depth=1 https://github.com/sayanta01/nvim ~/.config/nvim
# Tmux
[ -d ~/.config/tmux/plugins/ ] || git clone --depth=1 https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm

# Themes
git clone --depth=1 https://github.com/sayanta01/BeautySolar ~/.local/share/icons/BeautySolar
sudo cp -r ~/.local/share/icons/BeautySolar /usr/share/icons
sudo cp -r ~/.local/share/themes/* /usr/share/themes
sudo cp -r ~/.local/share/fonts/* /usr/share/fonts

printf "Install Main pkgs? [y/N]: "
read -r choice
if [ "$choice" = "y" ]; then
	sudo pacman -S --noconfirm ttf-joypixels ttf-font-awesome \
		noto-fonts noto-fonts-emoji noto-fonts-cjk terminus-font \
		eza bat fd fzf man-db bash-completion \
		kitty neovim htop cowsay \
		bspwm sxhkd polybar rofi slock dunst \
		qt5ct qt6ct lxappearance xcape pass \
		pavucontrol playerctl pamixer \
		mpv mediainfo nsxiv maim xwallpaper python-pywal \
		net-tools wireless_tools network-manager-applet \
		unrar unzip p7zip file-roller \
		zathura zathura-pdf-mupdf \
		gvfs-mtp thunar thunar-archive-plugin thunar-media-tags-plugin \
		zsh zsh-autosuggestions zsh-syntax-highlighting zsh-completions \
		rsync aria2 jq wget \
		xdg-utils xdg-user-dirs \
		pacman-contrib socat exfat-utils \
		xclip xdotool wmname wmctrl
	# xorg-xinit xorg-server xorg-xwininfo xorg-xsetroot
else
	:
fi

# Check CPU vendor
cpu_vendor=$(grep vendor_id /proc/cpuinfo | uniq | awk -F ': ' '{print $2}')
if [ "$cpu_vendor" = "GenuineIntel" ]; then
	sudo pacman -S --noconfirm intel-ucode
elif [ "$cpu_vendor" = "AuthenticAMD" ]; then
	sudo pacman -S --noconfirm amd-ucode
else
	echo "Unsupported CPU vendor"
fi

## Audio server
distro=$(lsb_release -a | grep 'Distributor ID' | cut -f 2)
if [ "$distro" = "Artix" ]; then
	sudo pacman -S --noconfirm pipewire pipewire-pulse wireplumber
	# sudo pacman -S --noconfirm pulseaudio pulseaudio-bluetooth

	## Services
	sudo pacman -S --noconfirm openssh-runit dbus-runit docker-runit bluez-runit
	sudo ln -s /etc/runit/sv/sshd /run/runit/service
	sudo ln -s /etc/runit/sv/dbus /run/runit/service
	sudo ln -s /etc/runit/sv/bluetoothd /run/runit/service
	sudo ln -s /run/runit/sv/docker /run/runit/service
	sudo touch /run/runit/service/docker/down
else
	sudo pacman -S --noconfirm pipewire pipewire-pulse wireplumber
	systemctl --user --now enable pipewire pipewire-pulse wireplumber

	## Services
	sudo pacman -S --noconfirm openssh dbus docker bluez
	sudo systemctl disable docker.socket
fi

# GUI apps
printf "Install GUI pkgs? [y/N]: "
read -r choice
if [ "$choice" = "y" ]; then
	sudo pacman -S --noconfirm scrcpy kdeconnect
# meld ntfs-3g
# obs-studio gimp audacity
# blueman bluez-utils
# virtualbox virtualbox-guest-utils
# sudo usermod -aG vboxusers "$USER"  # use USB
else
	:
fi

# VM
printf "Install QEMU? [y/N]: "
read -r choice
if [ "$choice" = "y" ]; then
	sudo pacman -S --noconfirm qemu virt-manager dnsmasq bridge-utils openbsd-netcat libvirt-runit spice-vdagent-runit
	# libvirt spice-vdagent qemu-arch-extra
	sudo ln -s /etc/runit/sv/virtlogd /run/runit/service
	sudo touch /run/runit/service/virtlogd/down
	sudo ln -s /etc/runit/sv/libvirtd /run/runit/service
	sudo touch /run/runit/service/libvirtd/down
	sudo ln -s /etc/runit/sv/spice-vdagentd /run/runit/service
	sudo touch /run/runit/service/spice-vdagentd/down
	# sudo systemctl start --now libvirtd  # Arch
	sudo sed -i '/^#unix_sock_group = "libvirt"/s/^#//' /etc/libvirt/libvirtd.conf
	sudo sed -i '/^#unix_sock_rw_perms = "0770"/s/^#//' /etc/libvirt/libvirtd.conf
	sudo usermod -aG libvirt "$USER"
	# sudo systemctl restart libvirtd  # Arch
else
	:
fi

# AUR
if command -v paru >/dev/null 2>&1; then
	printf "Install AUR pkgs? [y/N]: "
	read -r choice
	[ "$choice" = "y" ] && paru -S xsct colorpicker simple-mtpfs yt-dlp
else
	git clone --depth=1 https://aur.archlinux.org/paru.git ~/.cache/paru && cd ~/.cache/paru && makepkg -fsri --noconfirm
	printf "Install AUR pkgs? [y/N]: "
	read -r choice
	[ "$choice" = "y" ] && paru -S xsct colorpicker simple-mtpfs yt-dlp
fi

# edit_pacman_conf() {
# 	conf="/etc/pacman.conf"
# 	lines="Color CheckSpace VerbosePkgLists ParallelDownloads"
#
# 	for l in $lines; do
# 		grep -q "^#$l" "$conf" && sudo sed -i "s/^#$l/$l/" "$conf" && echo "Uncommented: $l" || echo "$l is already Uncommented"
# 	done
#
# 	grep -q "^ParallelDownloads" "$conf" && ! grep -q "^ILoveCandy" "$conf" && sudo sed -i "/^ParallelDownloads/a ILoveCandy" "$conf" && echo "Added ILoveCandy below ParallelDownloads" || echo "ILoveCandy already exists"
# }
# edit_pacman_conf

# Teletype font
sudo setfont /usr/share/kbd/consolefonts/ter-120b.psf.gz
sudo su root -c "echo -e FONT='ter-120b' > /etc/vconsole.conf"

# Qt
sudo sh -c 'echo "QT_QPA_PLATFORMTHEME=\"qt5ct\"" > /etc/environment'
